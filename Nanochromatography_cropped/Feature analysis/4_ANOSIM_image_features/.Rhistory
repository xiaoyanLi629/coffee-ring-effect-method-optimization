setwd("~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature")
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Manova.R')
summary(res)
install.packages('vegan')
sink('result.txt')
print(summary.aov(res))
sink()
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Manova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Manova_particle_feature.R')
summary(res, test = 'Pillai')
summary(res, test = 'Wilks')
summary(res, test = 'Roy')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/mancova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/mancova.R')
print(summary.aov(res))
data <- read.csv('feature_total.csv')
library(vegan)
adonis(data[1:8] ~ data[9], method = 'euclidean', permutations = 999)
adonis(cbind(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std) ~ class, method = 'euclidean', permutations = 999, data = data)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
rm(list = ls())
data <- read.csv('feature_total.csv')
# PERMANOVA test
res = adonis(cbind(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std) ~ class, method = 'euclidean', permutations = 999, data = data)
filename_write = paste('summary_permanova', '.txt', sep = '')
sink(filename_write)
print(summary(res))
print(summary.aov(res))
sink()
View(res)
res
print(res)
print(summary(res))
res$aov.tab
data
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
res
summary(res)
View(res)
res$aov.tab
res
res.cal
res.call
res$call
res$terms
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
setwd("~/")
setwd("~/Desktop/manova")
ocdData <- read.delim("../assets/Rdata/OCD.dat", header = TRUE)
ocdData <- read.delim("OCD.dat", header = TRUE)
# rename level label
ocdData$Group<-factor(ocdData$Group, levels = c("CBT", "BT", "No Treatment Control"), labels = c("CBT", "BT", "NT"))
str(ocdData)
View(ocdData)
View(ocdData)
View(ocdData)
ocdData <- read.delim("OCD.dat", header = TRUE)
View(ocdData)
# rename level label
ocdData$Group<-factor(ocdData$Group, levels = c("CBT", "BT", "No Treatment Control"), labels = c("CBT", "BT", "NT"))
View(ocdData)
str(ocdData)
library(reshape2)  # for melt() function
install.packages(reshape2)
install.packages('reshape2')
install.packages('ggplot2')
# First we need to restructure the data into long format:
ocdMelt <- melt(ocdData, id=c('Group'), measured=c('Actions', 'Thoughts'))
library(reshape2)  # for melt() function
library(ggplot2)
# First we need to restructure the data into long format:
ocdMelt <- melt(ocdData, id=c('Group'), measured=c('Actions', 'Thoughts'))
View(ocdMelt)
View(ocdData)
names(ocdMelt) <- c('Group', 'Outcome_Measure', 'Frequency')
# plot
ocdBoxplot <- ggplot(ocdMelt, aes(Group, Frequency, color = Outcome_Measure))
ocdBoxplot + geom_boxplot() + labs(x='Treatment Group', y='Number of Thoughts/Actions', color='Outcome_Measure') + scale_y_continuous(breaks=seq(0,20, by=2))
outcome <- cbind(ocdData$Actions, ocdData$Thoughts)
ocdModel <- manova(outcome ~ Group, data=ocdData)
View(data)
View(data)
View(data)
rm(list = ls())
library(vegan)
library(permute)
library(lattice)
data <- read.csv('feature_total.csv')
setwd("~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature")
data$class = fator(data$class, levels = c('sample 1', 'sample 2', 'sample 3', 'sample 4','sample 5',), labels = c(1, 2, 3, 4, 5))
data$class = factor(data$class, levels = c('sample 1', 'sample 2', 'sample 3', 'sample 4','sample 5',), labels = c(1, 2, 3, 4, 5))
l
data$class = factor(data$class, levels = c('sample 1', 'sample 2', 'sample 3', 'sample 4','sample 5',), labels = c('1', '2', '3', '4', '5'))
data$class = factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5',), labels = c('1', '2', '3', '4', '5'))
data$class = as.factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5',), labels = c('1', '2', '3', '4', '5'))
data$class = as.factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5'), labels = c('1', '2', '3', '4', '5'))
data$class = as.factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data$class = as.factor(data$class)
data$class
data.class()
data.class
data&class
data$area_mean
data[1]
data[1, 1]
data[1: 1]
data[class]
data[area_mean]
data['area_mean']
type(data)
class(data)
data <- read.csv('feature_total.csv')
data
data$class
data$class = as.factor(data$class)
View(data)
data$class = as.factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data <- read.csv('feature_total.csv')
data$class = as.factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5'), labels = c('1', '2', '3', '4', '5'))
data <- read.csv('feature_total.csv')
data$class = as.factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data$class
type(data$class)
class(data$class)
data$class = factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5'), labels = c(1, 2, 3, 4, 5))
class(data$class)
data <- read.csv('feature_total.csv')
data$class = factor(data$class, levels = c('sample1', 'sample2', 'sample3', 'sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data <- read.csv('feature_total.csv')
data$class = as.factor(data$class, levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data$class = factor(data$class, levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data <- read.csv('feature_total.csv')
data$class = factor(data$class, levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data <- read.csv('feature_total.csv')
data$class = as.factor(data$class, levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
View(data)
data$class = factor(data$class)
data$class = as.factor(data$class)
class(data$class)
data$class = as.factor(data$class)
data$class = as.factor(data$class, , levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data$class = as.factor(data$class, , levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c('1', '2', '3', '4', '5'))
data <- read.csv('feature_total.csv')
data$class = as.factor(data$class, , levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
class(data$class)
data$class = factor(data$class, , levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
type(data$class)
class(data$class)
data$class
data <- read.csv('feature_total.csv')
data$class
data$class = str(data$class)
class(data$class)
data <- read.csv('feature_total.csv')
class(data)
data$class = factor(data$class, , levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5), stringsAsfactor = True)
data$class = factor(data$class, , levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data$class = factor(data$class, , levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, , levels = c('sample1','sample2','sample3','sample4','sample5'), labels = c(1, 2, 3, 4, 5))
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, , labels = c('sample1','sample2','sample3','sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, , labels = c('sample1','sample2','sample3','sample4','sample5'), levels = c(1, 2, 3, 4, 5))
clear
rm(list = ls())
library(vegan)
library(permute)
library(lattice)
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, , labels = c('sample1','sample2','sample3','sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data$class <- factor(data$class, labels = c('sample1','sample2','sample3','sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, labels = c('sample1','sample2','sample3','sample4','sample5'), levels = c(1, 2, 3, 4, 5))
# PERMANOVA test
res = adonis(cbind(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std) ~ class, method = 'euclidean', permutations = 999, data = data)
res
# PERMANOVA test
res = adonis2(cbind(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std) ~ class, method = 'euclidean', permutations = 999, data = data)
View(data)
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, labels = c('sample1','sample2','sample3',
'sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data$condition <- factor(data$condition, labels = c('Condition1','Condition2','Condition3',
'Condition4','Condition5','Condition6',
'Condition7','Condition8','Condition9'),
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9))
25*9
# PERMANOVA test
res = adonis2(cbind(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std) ~ class, method = 'euclidean', permutations = 999, data = data)
class(data)
data$area_mean
# PERMANOVA test
res = adonis(cbind(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std)
~ class, method = 'euclidean', permutations = 999, data = data)
res2 = adonis(cbind(data$area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std)
~ class, method = 'euclidean', permutations = 999, data = data)
res
res2
res2 = adonis2(cbind(data$area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std)
~ class, method = 'euclidean', permutations = 999, data = data)
res2 = adonis2(cbind(data$area_mean, data$area_std, data$ecc_mean, data$ecc_std,
data$orien_mean, data$orien_std,  data$peri_mean, data$peri_std)
~ data$class, method = 'euclidean', permutations = 999, data = data)
res2
data
data[1:3]
data[c(1:3)]
data[c(1, 3)]
data[c(1, 3), ]
data[c(1, 3), :]
data[c(1, 3), 1:3]
data[1:3, 1:3]
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
print('\n')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
View(data)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
data("dune")
View(dune)
data("dune.env")
View(dune.env)
dune.dist <- vegdist(dune, method="bray")
dune.dist
View(res)
View(dune.env)
View(dune)
View(dune.env)
View(data)
dune.div <- adonis2(dune ~ Management*A1, data = dune.env, permutations = 999, method="bray")
dune.div
View(dune.div)
print(dune.div)
print(dune.dist)
data
a = 3
a
a = 3
3+2
a = 3
a+2
dune.dist
data <- read.csv('feature_total.csv')
data <- read.csv(filename)
data$class <- factor(data$class, labels = c('sample1','sample2','sample3',
'sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data
data.dist <- vegdist(data, method="bray")
library(vegan)
data.dist <- vegdist(data, method="bray")
data.dist <- vegdist(data[1:8, ], method="bray")
View(data)
class(data[1:8, ])
class(dune)
data[1, 1]
data[1, 1].isnumeric()
data[1, 1].is.numeric()
is.numeric(data[1:8, ])
is.numeric(data[1, 1])
is.numeric(data[1, ])
is.numeric(data[1, 1])
is.numeric(data[1:2, 1])
is.numeric(data[, 1])
is.numeric(data[, 2])
is.numeric(data[, 3])
is.numeric(data[, 4])
is.numeric(data[, 5])
is.numeric(data[, 6])
is.numeric(data[, 7])
is.numeric(data[, 8])
is.numeric(data[, 9])
is.numeric(data[, 1:8])
View(dune)
is.numeric(dune[, 1])
is.numeric(dune[, 2])
is.numeric(dune[, 1:30])
dune.dist <- vegdist(dune, method="bray")
data.dist <- vegdist(data, method="bray")
is.numeric(dune)
data.dist <- vegdist(data[, 1:8], method="bray")
View(data)
View(dune)
dune.dist
data.dist
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
res
dispersion <- betadisper(data.dist, group=data$class)
permutest(dispersion)
plot(dispersion, hull=FALSE, ellipse=TRUE)
data.dist <- vegdist(data[, 1:8], method="euclidean")
dispersion <- betadisper(data.dist, group=data$class)
plot(dispersion, hull=FALSE, ellipse=TRUE)
data.dist <- vegdist(data[, 1:8], method="manhattan")
dispersion <- betadisper(data.dist, group=data$class)
plot(dispersion, hull=FALSE, ellipse=TRUE)
res
plot(res)
dune.ano <- anosim(dune.dist, Management)
dune.dist
dune.dist <- vegdist(dune)
data("dune")
data("dune.env")
dune.dist <- vegdist(dune)
dune.ano <- anosim(dune.dist, Management)
attach(dune.env)
dune.ano <- anosim(dune.dist, Management)
dune.ano
summary(dune.ano)
plot(dune.ano)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/ANOSIM.R')
plot(dune.ano, notch = FALSE)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/ANOSIM.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/ANOSIM.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/ANOSIM.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/ANOSIM.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/ANOSIM.R')
res
View(data)
data[, 1:8]
data[, 1:8]
a = 3
a+3
a = 3
a+3
filename = paste('feature_', 'A', '.csv', sep = '')
data <- read.csv(filename)
data
data$class
data.dist = vegdist(data[, 1:8], method = 'euclidean')
library(vegan)
data.dist = vegdist(data[, 1:8], method = 'euclidean')
data.dist
res <- adonis(data.dist, data$class)
data$class
res <- adonis(data.dist, data$class)
data <- read.csv(filename)
res <- adonis(data.dist, data$class)
data$class
res <- adonis(data.dist, data[, 9])
group = data[, 9]
group
res <- adonis(data.dist, group)
res <- anosim(data.dist, data$class)
res
summary(res)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/ANOSIM.R')
plot(res)
res
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Manova_particle_feature.R')
summary(res)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Manova_particle_feature.R')
print(summary.aov(res))
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/mancova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
View(data)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Mancova_class_condition.R')
View(data)
View(data)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Mancova_class_condition.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Manova_class_condition.R')
View(data)
View(data)
mancova(data=data, deps = vars(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std, peri_mean, peri_std),
factors = class)
data('iris')
mancova(data = iris,
deps = vars(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width),
factors = Species)
data('iris')
force(iris)
View(iris)
mancova(data = iris,deps = vars(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width),factors = Species)
library(jmv)
install.packages('jmv')
mancova(data = iris,deps = vars(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width),factors = Species)
library(jmv)
mancova(data = iris,deps = vars(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width),factors = Species)
res = mancova(data = iris,deps = vars(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width),factors = Species)
res
summary(res)
summary.aov(res)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Mancova.R')
library(jmv)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Mancova.R')
(list = ls())
(list = ls())
(list = ls())
(list = ls())
(list = ls())
library(jmv)
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, labels = c('sample1','sample2','sample3',
'sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data$condition <- factor(data$condition, labels = c('cond1','cond2','cond3','cond4','cond5',
'cond6','cond7','cond8','cond9'), levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9))
View(data)
data$condition <- factor(data$condition, labels = c('cond1','cond2','cond3','cond4','cond5',
'cond6','cond7','cond8','cond9'), levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9))
# MANCOVA test
res <- mancova(cbind(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std)~ class+condition, data = data)
data$area_mean
# MANCOVA test
res <- mancova(deps = vars(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std),
factors = class+condition, data = data)
View(data)
rm(list = ls())
library(jmv)
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, labels = c('sample1','sample2','sample3',
'sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data$condition <- factor(data$condition, labels = c('cond1','cond2','cond3','cond4','cond5',
'cond6','cond7','cond8','cond9'), levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9))
View(data)
data$condition <- factor(data$condition, labels = c('cond1','cond2','cond3','cond4','cond5',
'cond6','cond7','cond8','cond9'), levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9))
View(data)
rm(list = ls())
library(jmv)
data <- read.csv('feature_total.csv')
data$class <- factor(data$class, labels = c('sample1','sample2','sample3',
'sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data$condition <- factor(data$condition, labels = c('cond1','cond2','cond3','cond4','cond5',
'cond6','cond7','cond8','cond9'), levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9))
# MANCOVA test
res <- mancova(deps = vars(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std),
factors = class+condition, data = data)
View(data)
View(data)
# MANCOVA test
res <- mancova(deps = vars(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std),
factors = data$class+data$condition, data = data)
# MANCOVA test
res <- mancova(deps = vars(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std),
factors = vars(data$class, data$condition), data = data)
# MANCOVA test
res <- mancova(deps = vars(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std),
factors = vars(class, condition), data = data)
# MANCOVA test
res <- mancova(deps = vars(area_mean, area_std, ecc_mean, ecc_std, orien_mean, orien_std,  peri_mean, peri_std),
factors = class, data = data)
filename_write = paste('summary_mancova_class_condition', '.txt', sep = '')
sink(filename_write)
print(res)
sink()
res
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Mancova.R')
library(vegan)
library(permute)
library(lattice)
sink('summary_anosim_image_properties.txt')
filename = 'total_image_properties.csv'
data <- read.csv(filename)
View(data)
View(data)
data$Class <- factor(data$Class, labels = c('sample1','sample2','sample3',
'sample4','sample5'), levels = c(1, 2, 3, 4, 5))
data.dist = vegdist(data[, 1:4], method = 'euclidean')
# ANOSIM test
# The method can be changed by vegdist methoids
res <- anosim(data.dist, data$Class)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/1_permanova_particle_features/Permanova.R')
setwd("~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/1_permanova_particle_features")
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/1_permanova_particle_features/Permanova.R')
setwd(getSrcDirectory()[1])
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/1_permanova_particle_features/Permanova.R')
getSrcDirectory()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
install.packages('rstudioapi')
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/feature/Permanova.R')
res
View(res)
print(res)
res[["coef.sites"]]
setwd("~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/1_permanova_particle_features")
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/1_permanova_particle_features/Permanova.R')
setwd("~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/3_manova_individual")
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/3_manova_individual/Manova_particle_feature.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/3_manova_individual/Manova_particle_feature.R')
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/4_ANOSIM_image_features/ANOSIM.R')
setwd("~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/4_ANOSIM_image_features")
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/4_ANOSIM_image_features/ANOSIM.R')
View(data)
source('~/Google Drive/Project_2_Task1/Nanochromatography_cropped/Feature analysis/4_ANOSIM_image_features/ANOSIM.R')
